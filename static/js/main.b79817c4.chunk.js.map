{"version":3,"sources":["components/images/logo.svg","components/Logo.js","components/addMoreContent/addMoreContent.js","components/AddMore/addMore.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","src","logo","alt","href","AddMoreContent","type","selected","React","Component","AddMore","MainPage","state","showBlock","addNewCategory","setState","name","value","defaultValue","onClick","this","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,+MCoB5BC,EAhBF,WACZ,OACC,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKC,IAAMC,IAAI,OAAOH,UAAU,cACrC,4CAEF,yBAAKA,UAAU,gBACd,uBAAGI,KAAK,KAAR,QACA,uBAAGA,KAAK,KAAR,UACA,uBAAGA,KAAK,KAAR,iB,4BC2BUC,G,mLAjCf,OACI,yBAAKL,UAAU,WACV,uBAAGA,UAAU,UAAb,cACG,yBAAKA,UAAU,SACX,uBAAGA,UAAU,MAAb,SACA,2BAAOM,KAAK,OAAMN,UAAU,WAEhC,yBAAKA,UAAU,eACX,uBAAGA,UAAU,MAAb,eACA,2BAAOM,KAAK,OAAMN,UAAU,YAEhC,yBAAKA,UAAU,UACV,uBAAGA,UAAU,MAAb,mBACA,4BAAQA,UAAU,aACd,4BAAQO,UAAQ,GAAhB,QACA,2CACA,+CACA,iDACA,0CAGT,yBAAKP,UAAU,QACV,uBAAGA,UAAU,MAAb,QACA,2BAAOM,KAAK,OAAMN,UAAU,gBAE7B,4BAAQA,UAAU,OAAlB,uB,GA5BaQ,IAAMC,YCWpBC,E,uKATf,OACI,yBAAKV,UAAU,QACd,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,QAAO,gCAAtB,UACA,kBAAC,EAAD,W,GAPiBQ,IAAMC,WCuDbE,G,kNAtDfC,MAAM,CACLC,WAAU,G,EAEXC,eAAe,WACR,EAAKC,SAAS,CACpBF,WAAW,EAAKD,MAAMC,a,uDAKtB,OACC,yBAAKb,UAAU,WACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,SAAf,YAEF,yBAAKA,UAAU,eACb,4BAAQA,UAAU,WAAlB,WACA,4CAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MACd,4CACA,4BAAQgB,KAAK,SAAShB,UAAU,UAC/B,4BAAQiB,MAAM,WAAUC,cAAY,GAApC,aACA,4BAAQD,MAAM,aAAd,cACF,4BAAQA,MAAM,YAAd,eAGF,4BAAQjB,UAAU,MAAKmB,QAASC,KAAKN,gBAArC,aAEA,yBAAKd,UAAU,aACb,yBAAKA,UAAU,OACb,+BACH,+BACK,wBAAIA,UAAU,WACZ,wCACA,2CACA,oCACA,qCACA,2CAMPoB,KAAKR,MAAMC,UACZ,kBAAC,EAAD,MACC,U,GAjDkBJ,cCaRY,MATf,WACE,OACC,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAiBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b79817c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.628f0336.svg\";","import React from 'react';\r\n\r\nimport logo from './images/logo.svg'\r\n\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className=\"logo__container\">\r\n\t\t  <div className=\"logo\">\r\n\t\t    <img src={logo} alt=\"logo\" className=\"img__logo\" />\r\n\t\t    <p>MoneyTracker</p>\r\n\t\t  </div>\r\n\t\t  <div className=\"buttons_logo\">\r\n\t\t\t  <a href=\"#\">Home</a>\r\n\t\t\t  <a href=\"#\">Charts</a>\r\n\t\t\t  <a href=\"#\">Categories</a>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React from \"react\"\r\nimport \"./addMoreContent.css\"\r\nimport AddMore from \"../AddMore/addMore.js\"\r\n\r\n\r\nclass AddMoreContent extends React.Component{\r\n    render(){\r\n\r\nreturn(\r\n    <div className=\"content\">\r\n         <p className=\"charge\">New Charge</p>\r\n            <div className=\"total\">\r\n                <p className=\"p1\">Total</p>\r\n                <input type=\"text\"className=\"input\"/>\r\n            </div> \r\n            <div className=\"description\">\r\n                <p className=\"p2\">Description</p>\r\n                <input type=\"text\"className=\"input1\"/>\r\n                </div>\r\n            <div className=\"select\">\r\n                 <p className=\"p3\">Select category</p>\r\n                 <select className=\"selectors\">\r\n                     <option selected>Food</option>\r\n                     <option>Clothes</option>\r\n                     <option>Restaurants</option>\r\n                     <option>Utility bills</option>\r\n                     <option>Pets</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"date\">\r\n                 <p className=\"p4\">Date</p> \r\n                 <input type=\"date\"className=\"input-date\"/>\r\n           </div>\r\n                <button className=\"btn\">\r\n                Add new income\r\n                </button>\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\nexport default AddMoreContent","import React from \"react\"\r\nimport \"./addMore.css\"\r\nimport AddMoreContent from \"../addMoreContent/addMoreContent\"\r\n\r\nclass AddMore extends React.Component{\r\n    render(){\r\n\r\nreturn(\r\n    <div className=\"main\">\r\n     <div className=\"balance\">Balance</div>\r\n     <div className=\"cash\"><b>$</b>300,00</div>\r\n     <AddMoreContent />\r\n   </div>\r\n      )\r\n   }\r\n}\r\nexport default AddMore","import React ,{Component} from 'react';\r\nimport AddMore from \"./AddMore/addMore\"\r\nimport \"./MainPage.css\"\r\n\r\nclass MainPage extends Component {\r\nstate={\r\n\tshowBlock:false\r\n}\r\naddNewCategory=()=>{\r\n       this.setState({\r\n\tshowBlock:!this.state.showBlock\r\n})\r\n\t}\r\nrender(){\r\n\t\r\n\treturn(\r\n\t\t<div className=\"wrapper\">\r\n\t\t  <div className=\"allBalance\">\r\n\t\t    <div className=\"balance\">Balance</div> \r\n\t\t    <div className=\"money\">$300.00</div>\r\n\t\t  </div>\r\n\t\t  <div className=\"mainButtons\">\r\n\t\t    <button className=\"charges\">Charges</button>\r\n\t\t    <button>Incomes</button>\r\n\t\t  </div>\r\n\t\t  <div className=\"changeAndAdd\">\r\n\t\t    <div className=\"ww\">\r\n\t\t    \t<span>My charges</span>\r\n\t\t\t    <select name=\"change\" className=\"change\">\r\n\t\t\t  \t  <option value=\"thisWeek\"defaultValue >This week</option>\r\n\t\t\t  \t  <option value=\"thisMonth\">This month</option>\r\n\t\t\t\t  <option value=\"thisYear\">This year</option>\r\n\t\t\t  \t</select>\r\n\t\t  \t</div>\r\n\t\t\t\t<button className=\"add\"onClick={this.addNewCategory}>Add more</button>\r\n\t\t  </div>\r\n\t\t  <div className=\"mainTable\">\r\n\t\t    <div className=\"tbl\">\r\n\t\t      <table>\r\n\t\t\t  <thead>\r\n\t\t        <tr className=\"mainTbl\">\r\n\t\t          <th>Category</th>\r\n\t\t          <th>Description</th>\r\n\t\t          <th>Data</th>\r\n\t\t          <th>Money</th>\r\n\t\t          <th>Action</th>\r\n\t\t        </tr>\r\n\t\t\t\t</thead>\r\n\t\t      </table>\r\n\t\t    </div>\r\n\t\t  </div>\r\n\t\t  {this.state.showBlock ?\r\n\t\t  <AddMore />\r\n\t\t  :null\r\n\t\t  }\r\n\t\t</div>\r\n\t)\r\n}\r\n}\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport Logo from './components/Logo.js';\r\nimport MainPage from './components/MainPage.js';\r\n\r\nimport logo from './components/images/logo.svg';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n  \t<>\r\n\t  <Logo />\r\n\t  <MainPage />\r\n\t</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}